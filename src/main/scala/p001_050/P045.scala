package project_euler

/**
 * Problem 45:
 * Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
 *
 * Triangle      Tn=n(n+1)/2     1, 3, 6, 10, 15, ...
 * Pentagonal    Pn=n(3n−1)/2    1, 5, 12, 22, 35, ...
 * Hexagonal     Hn=n(2n−1)      1, 6, 15, 28, 45, ...
 *
 * It can be verified that T285 = P165 = H143 = 40755.
 *
 * Find the next triangle number that is also pentagonal and hexagonal.
 *
 * 問題 45:
 * 三角数, 五角数, 六角数は以下のように生成される.
 *
 * 三角数    Tn=n(n+1)/2     1, 3, 6, 10, 15, ...
 * 五角数    Pn=n(3n-1)/2    1, 5, 12, 22, 35, ...
 * 六角数    Hn=n(2n-1)      1, 6, 15, 28, 45, ...
 *
 * T285 = P165 = H143 = 40755であることが分かる.
 *
 * 次の三角数かつ五角数かつ六角数な数を求めよ.
 */
object P045 {
  import commons._

  def isTriangleNumber(n: Long) = {
    val t = (-1 + math.sqrt(1 + 8 * n)) / 2
    t == t.toLong
  }

  def isPentagonalNumber(n: Long) = {
    val t = (1 + math.sqrt(1 + 24 * n)) / 6;
    t == t.toLong
  }

  val hexagonalNumbers: Stream[Long] = 1L #:: hexagonalNumbers.zip(from(1, 4).tail).map { case (a, b) => a + b }

  def solve: Long =
    hexagonalNumbers.drop(143)
      .find { h => isTriangleNumber(h) && isPentagonalNumber(h) }
      .get
}

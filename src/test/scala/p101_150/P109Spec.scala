package test.project_euler

import project_euler.P109
import org.specs2.mutable._

class P109Spec extends Specification {
  "P109#points" should {
    "is [(1, 1), (2, 1), (3, 1), (1, 2), ...]" in {
      val expected = Seq(
        (1, 1), (2, 1), (3, 1),
        (1, 2), (2, 2), (3, 2),
        (1, 3), (2, 3), (3, 3),
        (1, 4), (2, 4), (3, 4),
        (1, 5), (2, 5), (3, 5),
        (1, 6), (2, 6), (3, 6),
        (1, 7), (2, 7), (3, 7),
        (1, 8), (2, 8), (3, 8),
        (1, 9), (2, 9), (3, 9),
        (1, 10), (2, 10), (3, 10),
        (1, 11), (2, 11), (3, 11),
        (1, 12), (2, 12), (3, 12),
        (1, 13), (2, 13), (3, 13),
        (1, 14), (2, 14), (3, 14),
        (1, 15), (2, 15), (3, 15),
        (1, 16), (2, 16), (3, 16),
        (1, 17), (2, 17), (3, 17),
        (1, 18), (2, 18), (3, 18),
        (1, 19), (2, 19), (3, 19),
        (1, 20), (2, 20), (3, 20),
        (1, 25), (2, 25), (0, 0)
      )
      P109.points must beEqualTo(expected)
    }
  }

  "P109#solve(Int)" should {
    "returns 38182 if n = 100" in {
      P109.solve(100) must beEqualTo(38182)
    }
  }
}
